imageOrg: "drycc"
imagePullPolicy: "Always"
imageTag: "canary"
imageRegistry: "registry.drycc.cc"

## Enable diagnostic mode
##
diagnosticMode:
  ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
  ##
  enabled: false
  ## @param diagnosticMode.command Command to override all containers
  ##
  command:
    - sleep
  ## @param diagnosticMode.args Args to override all containers
  ##
  args:
    - infinity

resources: {}
  # limits:
  #   cpu: 200m
  #   memory: 50Mi
  # requests:
  #   cpu: 100m
  #   memory: 30Mi

nodeAffinityPreset:
  key: "drycc.cc/node"
  type: "soft"
  values:
  - "true"

podAffinityPreset:
  type: ""
  extraMatchLabels:
    security: "drycc-security"

podAntiAffinityPreset:
  type: "soft"
  extraMatchLabels:
    app: "drycc-grafana"

# grafana security config
adminUsername: ""
adminPassword: ""

# Service
service:
  # Provide any additional service annotations
  annotations: {}

persistence:
  enabled: false
  size: 5Gi
  storageClass: ""
# Any custom grafana environment variables
# can be specified as key-value pairs under environment
# this is usually a non required setting.
environment: {}

## valkeyUrl are will no longer use the built-in valkey component
valkeyUrl: ""
## databaseUrl are will no longer use the built-in database component
databaseUrl: ""
# The passportUrl, passportKey and passportSecret are will no longer use the built-in passport component
passportUrl: ""
passportKey: ""
passportSecret: ""
# victoriametricsUrl is will no longer use the built-in victoriametrics component
victoriametricsUrl: ""

valkey:
  enabled: true
  replicas: 1
  port: "6379"

grafana:
  enabled: true

storage:
  enabled: true

database:
  enabled: true

registry:
  enabled: true

passport:
  enabled: true

victoriametrics:
  enabled: true

global:
  # The public resolvable hostname to build your cluster with.
  #
  # This will be the hostname that is used to build endpoints such as "drycc.$HOSTNAME"
  platformDomain: ""
  # Whether cert_manager is enabled to automatically generate drycc certificates
  certManagerEnabled: true
